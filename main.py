import re
from kivy.lang import Builder
from kivy.uix.screenmanager import ScreenManager, Screen, FadeTransition
from kivy.app import App
from kivy.uix.floatlayout import FloatLayout
from kivy.uix.textinput import TextInput

sm = ScreenManager(transition=FadeTransition(duration=0.04))

Builder.load_file("my.kv")

IdMpas = [[46, 50, 65, 80, 84], [53, 57, 72, 86, 90], [60, 64, 78, 93, 97], [65, 69, 84, 98, 102],
          [68, 72, 87, 101, 106], [70, 74, 89, 104, 108], [71, 75, 90, 105, 109], [72, 76, 91, 106, 110],
          [72, 76, 91, 106, 110], [72, 76, 91, 106, 110], [72, 76, 91, 106, 110], [72, 76, 91, 106, 110],
          [72, 76, 91, 106, 110], [72, 76, 91, 105, 110], [72, 76, 91, 105, 110], [71, 76, 90, 105, 109],
          [72, 76, 91, 106, 110], [73, 78, 92, 107, 111], [75, 79, 94, 109, 113], [77, 81, 96, 111, 115],
          [78, 83, 97, 112, 116], [80, 84, 98, 114, 118], [81, 86, 100, 115, 119], [83, 87, 102, 117, 121],
          [86, 90, 105, 119, 123], [88, 92, 107, 122, 126], [90, 94, 109, 124, 128], [92, 96, 110, 125, 129],
          [93, 97, 111, 126, 130], [93, 97, 112, 127, 131], [93, 98, 112, 127, 131], [94, 98, 112, 127, 131]]
IdMpad = [[38, 42, 55, 68, 72], [38, 42, 55, 68, 71], [38, 41, 54, 67, 71], [35, 39, 52, 65, 69], [34, 38, 51, 64, 68],
          [35, 38, 51, 64, 68], [35, 39, 52, 65, 68], [36, 39, 53, 65, 69], [36, 40, 53, 66, 69], [36, 40, 53, 66, 70],
          [37, 40, 53, 66, 70], [37, 41, 54, 67, 70], [37, 41, 54, 67, 71], [38, 41, 54, 67, 71], [38, 41, 54, 67, 71],
          [40, 43, 56, 69, 73], [40, 43, 56, 69, 73], [40, 43, 56, 69, 73], [40, 43, 56, 69, 73], [40, 44, 57, 70, 74],
          [41, 45, 58, 71, 75], [43, 46, 59, 72, 76], [44, 48, 61, 74, 77], [46, 49, 62, 75, 79], [47, 51, 64, 77, 81],
          [49, 53, 66, 78, 82], [46, 50, 64, 78, 82], [49, 53, 67, 81, 85], [49, 53, 67, 82, 86], [49, 53, 67, 81, 85],
          [48, 52, 66, 80, 84], [48, 52, 66, 80, 84]]
IdHpas = [[54, 58, 73, 87, 92], [55, 59, 74, 89, 93], [57, 62, 76, 91, 95], [67, 71, 86, 101, 105],
          [72, 76, 91, 106, 110], [72, 76, 91, 106, 110], [72, 76, 91, 105, 110], [72, 76, 91, 105, 110],
          [72, 76, 90, 105, 109], [71, 76, 90, 105, 109], [71, 75, 90, 105, 109], [71, 75, 90, 105, 109],
          [71, 75, 90, 105, 109], [71, 76, 90, 105, 109], [71, 76, 90, 105, 109], [72, 76, 91, 106, 110],
          [73, 77, 92, 107, 111], [74, 79, 91, 108, 112], [76, 80, 95, 109, 113], [77, 81, 96, 111, 115],
          [78, 83, 97, 112, 116], [80, 84, 99, 114, 118], [82, 86, 101, 115, 120], [84, 88, 102, 117, 121],
          [86, 90, 105, 119, 123], [88, 92, 107, 121, 126], [90, 94, 109, 124, 128], [93, 97, 112, 126, 131],
          [95, 99, 114, 129, 133], [98, 102, 117, 131, 136], [100, 104, 119, 134, 138], [102, 106, 121, 136, 140]]
IdHpad = [[38, 42, 55, 68, 72], [38, 42, 55, 68, 71], [37, 41, 54, 67, 71], [35, 39, 52, 64, 68], [33, 37, 50, 63, 66],
          [33, 37, 50, 63, 66], [44, 37, 50, 63, 67], [35, 39, 52, 65, 68], [36, 40, 53, 66, 70], [37, 41, 54, 67, 71],
          [38, 42, 55, 68, 72], [39, 43, 55, 68, 72], [39, 43, 56, 69, 73], [39, 43, 56, 69, 73], [39, 43, 56, 69, 73],
          [39, 43, 56, 68, 72], [39, 42, 55, 68, 72], [39, 43, 56, 69, 72], [40, 43, 56, 69, 73], [41, 44, 57, 70, 74],
          [42, 45, 58, 71, 75], [43, 47, 60, 73, 76], [44, 48, 61, 74, 78], [45, 49, 62, 75, 79], [47, 50, 63, 76, 80],
          [48, 51, 64, 77, 81], [45, 49, 64, 77, 81], [46, 50, 64, 78, 82], [47, 51, 65, 79, 83], [49, 53, 67, 81, 85],
          [51, 55, 69, 83, 87], [52, 56, 70, 84, 88]]

Hpas = [
    [[85, 98, 102, 114], [85, 99, 102, 114], [86, 99, 103, 115], [86, 100, 103, 115], [87, 100, 104, 116],
     [88, 101, 105, 117], [88, 101, 105, 117]],
    [[87, 100, 104, 116], [87, 100, 105, 117], [88, 101, 105, 117], [89, 102, 106, 118], [89, 103, 107, 119],
     [90, 103, 107, 119], [91, 104, 108, 120]],
    [[88, 101, 106, 118], [89, 102, 106, 118], [89, 102, 107, 119], [90, 103, 107, 119], [91, 104, 108, 120],
     [92, 105, 109, 121], [92, 105, 109, 121]],
    [[90, 102, 107, 119], [90, 103, 107, 119], [91, 104, 108, 120], [92, 105, 108, 120], [93, 105, 109, 121],
     [94, 106, 110, 122], [94, 107, 110, 122]],
    [[91, 103, 107, 119], [92, 104, 108, 120], [93, 105, 109, 121], [94, 106, 109, 121], [95, 107, 110, 122],
     [96, 108, 111, 123], [96, 108, 112, 124]],
    [[93, 105, 108, 120], [93, 105, 109, 121], [94, 106, 110, 122], [95, 107, 111, 123], [96, 109, 112, 124],
     [97, 110, 113, 125], [98, 110, 114, 126]],
    [[94, 106, 110, 122], [94, 107, 110, 122], [95, 108, 111, 123], [97, 109, 112, 124], [98, 110, 114, 126],
     [98, 111, 115, 127], [99, 111, 116, 128]],
    [[95, 107, 111, 123], [96, 108, 112, 124], [97, 109, 112, 124], [98, 110, 114, 126], [99, 111, 115, 127],
     [99, 112, 116, 128], [100, 112, 117, 129]],
    [[96, 107, 112, 124], [97, 108, 112, 124], [98, 109, 113, 125], [99, 110, 115, 127], [100, 112, 116, 128],
     [101, 113, 118, 130], [101, 114, 119, 131]],
    [[97, 108, 112, 124], [98, 109, 113, 125], [99, 111, 114, 126], [100, 112, 116, 128], [101, 113, 118, 130],
     [102, 115, 120, 132], [103, 116, 121, 133]],
    [[99, 110, 114, 126], [99, 111, 114, 126], [101, 112, 116, 128], [102, 114, 118, 130], [103, 116, 120, 132],
     [104, 117, 123, 135], [106, 118, 124, 136]],
    [[101, 113, 116, 128], [101, 114, 117, 129], [102, 115, 118, 130], [104, 117, 121, 133], [106, 119, 124, 136],
     [108, 121, 126, 138], [109, 122, 128, 140]],
    [[103, 115, 119, 131], [104, 116, 120, 132], [105, 118, 122, 134], [108, 121, 125, 137], [110, 124, 128, 140],
     [111, 126, 130, 142], [112, 126, 131, 143]],
    [[105, 119, 123, 135], [106, 120, 125, 137], [109, 123, 127, 139], [111, 126, 130, 142], [112, 127, 132, 144],
     [113, 128, 133, 145], [113, 129, 134, 146]],
    [[108, 123, 127, 139], [110, 124, 129, 141], [112, 126, 131, 143], [113, 128, 132, 144], [114, 129, 134, 146],
     [114, 130, 135, 147], [114, 130, 135, 147]],
    [[111, 126, 130, 142], [112, 127, 131, 143], [114, 128, 133, 145], [115, 129, 134, 146], [115, 131, 135, 147],
     [116, 131, 136, 148], [116, 132, 137, 149]],
    [[114, 128, 132, 144], [115, 129, 133, 145], [116, 130, 134, 146], [117, 131, 135, 147], [117, 132, 137, 149],
     [118, 133, 138, 150], [118, 134, 138, 150]]]
Hpad = [
    [[40, 52, 54, 66], [40, 52, 54, 66], [40, 53, 55, 67], [41, 53, 55, 67], [41, 54, 56, 68], [42, 54, 57, 69],
         [42, 54, 57, 69]],
        [[43, 55, 57, 69], [43, 55, 58, 70], [44, 56, 58, 70], [44, 56, 59, 71], [45, 57, 60, 72], [46, 58, 61, 73],
         [46, 58, 61, 73]],
        [[45, 58, 60, 72], [46, 58, 61, 73], [46, 59, 61, 73], [47, 59, 62, 74], [48, 60, 63, 75], [49, 61, 64, 76],
         [49, 61, 64, 76]],
        [[48, 60, 63, 75], [49, 61, 64, 76], [49, 62, 65, 77], [50, 62, 66, 78], [51, 63, 67, 79], [52, 64, 67, 79],
         [52, 64, 68, 80]],
        [[51, 63, 66, 78], [51, 64, 67, 79], [52, 65, 68, 80], [53, 65, 69, 81], [54, 66, 70, 82], [55, 67, 70, 82],
         [55, 67, 71, 83]],
        [[54, 66, 69, 81], [54, 66, 70, 82], [55, 67, 70, 82], [56, 68, 71, 83], [57, 68, 72, 84], [57, 69, 72, 84],
         [58, 69, 73, 85]],
        [[56, 68, 71, 83], [56, 68, 71, 83], [57, 69, 72, 84], [58, 70, 73, 85], [58, 70, 73, 85], [59, 71, 74, 86],
         [59, 71, 74, 86]],
        [[57, 69, 72, 84], [57, 70, 73, 85], [58, 70, 73, 85], [59, 71, 74, 86], [59, 72, 75, 87], [60, 72, 75, 87],
         [60, 73, 75, 87]],
        [[57, 70, 74, 86], [58, 71, 74, 86], [59, 72, 75, 87], [60, 73, 76, 88], [61, 74, 76, 88], [62, 74, 77, 89],
         [62, 74, 77, 89]],
        [[59, 72, 76, 88], [60, 73, 76, 88], [61, 74, 77, 89], [62, 74, 77, 89], [63, 75, 78, 90], [63, 75, 78, 90],
         [64, 76, 78, 90]],
        [[61, 74, 77, 89], [61, 74, 78, 90], [62, 75, 78, 90], [63, 75, 78, 90], [63, 75, 78, 90], [63, 76, 78, 90],
         [63, 76, 78, 90]],
        [[61, 75, 78, 90], [62, 75, 78, 90], [62, 75, 78, 90], [62, 75, 78, 90], [62, 75, 78, 90], [63, 76, 79, 91],
         [63, 76, 79, 91]],
        [[61, 74, 78, 90], [60, 74, 78, 90], [61, 74, 78, 90], [62, 75, 78, 90], [63, 76, 80, 92], [64, 77, 81, 93],
         [65, 77, 81, 93]],
        [[60, 74, 77, 89], [60, 74, 78, 90], [62, 75, 79, 91], [64, 77, 81, 93], [65, 78, 82, 94], [66, 79, 83, 95],
         [67, 80, 84, 96]],
        [[61, 75, 78, 90], [62, 76, 79, 91], [64, 78, 81, 93], [65, 79, 83, 95], [66, 80, 84, 96], [67, 81, 85, 97],
         [68, 81, 85, 97]],
        [[63, 77, 80, 92], [64, 78, 81, 93], [66, 79, 83, 95], [67, 80, 84, 96], [68, 81, 85, 97], [69, 82, 86, 98],
         [69, 82, 86, 98]],
        [[65, 78, 81, 93], [66, 79, 82, 94], [67, 80, 84, 96], [68, 81, 85, 97], [69, 82, 86, 98], [70, 82, 86, 98],
         [70, 83, 87, 99]]]
Hest = [[77.2, 78.3, 80.2, 82.4, 86.7, 87.9], [86.1, 87.4, 89.6, 92.1, 94.7, 97.1, 98.5],
        [92.5, 93.9, 96.3, 99, 101.8, 104.3, 105.8], [98.5, 100.2, 102.9, 105.9, 108.9, 111.5, 113.2],
        [104.4, 106.2, 109.1, 112.4, 115.7, 118.6, 120.3], [110.3, 112.2, 115.3, 118.9, 122.4, 125.6, 127.5],
        [116.1, 118, 121.4, 125.1, 128.9, 132.4, 134.5], [121.4, 123.5, 127, 131, 135.1, 138.8, 141],
        [126, 128.3, 132.1, 136.3, 140.7, 144.7, 147.1], [130.2, 132.7, 136.7, 141.3, 145.9, 150.1, 152.7],
        [134.7, 137.3, 141.5, 146.4, 151.3, 155.8, 158.6], [140.3, 143, 147.5, 152.7, 157.9, 162.6, 165.5],
        [147, 150, 154.9, 160.3, 165.7, 170.5, 173.4], [153.8, 156.9, 162, 167.5, 172.7, 177.4, 180.1],
        [159, 162, 166.9, 172.2, 177.2, 181.6, 184.2], [162.1, 165, 169.6, 174.6, 179.5, 183.8, 186.4],
        [163.8, 166.5, 170.9, 175.8, 180.7, 184.9, 187.5]]

Mpas = [
    [[84, 98, 101, 113], [85, 99, 102, 114], [86, 99, 102, 114], [86, 100, 103, 115], [87, 101, 104, 116],
     [88, 102, 105, 117], [88, 102, 105, 117]],
    [[87, 101, 104, 116], [87, 101, 105, 117], [88, 102, 106, 118], [89, 103, 106, 118], [90, 104, 107, 119],
     [91, 105, 108, 120], [91, 106, 109, 121]],
    [[88, 102, 106, 118], [89, 103, 106, 118], [89, 104, 107, 119], [90, 104, 108, 120], [91, 105, 109, 121],
     [92, 106, 110, 122], [93, 107, 110, 122]],
    [[89, 103, 107, 119], [90, 104, 108, 120], [91, 105, 109, 121], [92, 106, 109, 121], [93, 107, 110, 122],
     [94, 108, 111, 123], [94, 108, 112, 124]],
    [[92, 105, 109, 121], [92, 106, 109, 121], [93, 107, 110, 122], [94, 108, 111, 123], [96, 109, 112, 124],
     [97, 110, 113, 125], [97, 111, 114, 126]],
    [[92, 105, 109, 121], [92, 106, 109, 121], [93, 107, 110, 122], [94, 108, 111, 123], [96, 109, 112, 124],
     [97, 110, 113, 125], [97, 111, 114, 126]],
    [[92, 106, 109, 121], [93, 106, 110, 122], [94, 107, 111, 123], [95, 109, 112, 124], [97, 110, 113, 125],
     [98, 111, 114, 126], [99, 112, 115, 127]],
    [[93, 107, 110, 122], [94, 107, 111, 123], [95, 108, 112, 124], [97, 1107, 113, 125], [98, 111, 115, 127],
     [99, 112, 116, 128], [100, 113, 117, 129]],
    [[95, 108, 112, 124], [95, 108, 112, 124], [97, 109, 113, 125], [98, 111, 114, 126], [99, 112, 116, 128],
     [100, 113, 117, 129], [101, 114, 118, 130]],
    [[96, 109, 113, 125], [97, 110, 114, 126], [98, 111, 114, 126], [99, 112, 116, 128], [101, 113, 117, 129],
     [102, 115, 119, 131], [103, 116, 20, 132]],
    [[98, 111, 115, 127], [99, 112, 116, 128], [101, 113, 117, 129], [102, 114, 118, 130], [104, 116, 120, 132],
     [105, 118, 123, 135], [106, 120, 124, 136]],
    [[102, 114, 118, 130], [102, 115, 119, 131], [104, 116, 120, 132], [105, 118, 122, 134], [107, 120, 124, 136],
     [108, 122, 125, 137], [108, 122, 126, 138]],
    [[104, 116, 121, 133], [105, 117, 122, 134], [106, 119, 123, 135], [107, 121, 124, 136], [108, 122, 126, 138],
     [108, 123, 126, 138], [109, 123, 127, 139]],
    [[105, 118, 123, 135], [106, 118, 123, 135], [107, 120, 124, 136], [108, 122, 125, 137], [109, 123, 126, 138],
     [109, 123, 127, 139], [109, 123, 127, 139]],
    [[105, 118, 124, 136], [106, 119, 124, 136], [107, 121, 125, 137], [108, 122, 126, 138], [109, 123, 127, 139],
     [109, 123, 127, 139], [109, 124, 128, 140]],
    [[106, 119, 124, 136], [107, 120, 125, 137], [108, 122, 125, 137], [109, 123, 127, 139], [109, 124, 127, 139],
     [110, 124, 128, 140], [110, 124, 128, 140]],
    [[107, 120, 125, 137], [108, 121, 125, 137], [109, 123, 126, 138], [110, 124, 127, 139], [110, 124, 128, 140],
     [110, 125, 128, 140], [111, 125, 128, 140]]]
Mpad = [
    [[41, 54, 59, 71], [42, 55, 59, 71], [42, 56, 60, 72], [43, 56, 60, 72], [44, 57, 61, 73], [45, 58, 62, 74],
     [46, 58, 62, 74]],
    [[45, 58, 62, 74], [46, 58, 63, 75], [47, 59, 63, 75], [48, 60, 64, 76], [49, 61, 65, 77], [50, 62, 66, 78],
     [51, 62, 66, 78]],
    [[48, 60, 64, 76], [48, 61, 65, 77], [49, 61, 65, 77], [50, 62, 66, 78], [51, 63, 67, 79], [53, 64, 68, 80],
     [53, 65, 69, 81]],
    [[50, 62, 66, 78], [51, 63, 67, 79], [51, 64, 68, 80], [53, 65, 69, 81], [54, 66, 70, 82], [55, 67, 70, 82],
     [55, 67, 71, 83]],
    [[52, 64, 68, 80], [52, 65, 69, 81], [53, 66, 70, 82], [55, 67, 71, 83], [56, 68, 72, 84], [57, 69, 73, 85],
     [57, 70, 73, 85]],
    [[54, 67, 70, 82], [54, 67, 71, 83], [55, 68, 72, 84], [56, 69, 72, 84], [57, 70, 73, 85], [58, 71, 74, 86],
     [59, 71, 74, 86]],
    [[55, 68, 72, 84], [55, 68, 72, 84], [56, 69, 73, 85], [57, 70, 73, 85], [58, 71, 74, 86], [59, 72, 74, 86],
     [60, 72, 75, 87]],
    [[56, 69, 72, 84], [56, 70, 73, 85], [57, 71, 74, 86], [59, 72, 74, 86], [60, 72, 75, 87], [61, 73, 75, 87],
     [61, 73, 75, 87]],
    [[57, 71, 74, 86], [58, 71, 74, 86], [59, 72, 75, 87], [60, 73, 75, 87], [60, 73, 75, 87], [61, 73, 75, 87],
     [61, 73, 75, 87]],
    [[58, 72, 75, 87], [59, 73, 75, 87], [59, 73, 76, 88], [60, 73, 76, 88], [61, 73, 76, 88], [61, 73, 76, 88],
     [61, 73, 76, 88]],
    [[60, 74, 76, 88], [60, 74, 77, 89], [60, 74, 77, 89], [61, 74, 77, 89], [62, 74, 77, 89], [63, 75, 77, 89],
     [64, 75, 77, 89]],
    [[61, 75, 78, 90], [61, 75, 78, 90], [61, 75, 78, 90], [62, 75, 78, 90], [64, 76, 79, 91], [65, 76, 79, 91],
     [65, 76, 79, 91]],
    [[62, 75, 79, 91], [62, 75, 79, 91], [63, 75, 79, 91], [64, 76, 79, 91], [65, 76, 80, 92], [65, 76, 80, 92],
     [65, 76, 81, 93]],
    [[63, 76, 80, 92], [63, 76, 80, 92], [64, 76, 80, 92], [65, 76, 80, 92], [66, 77, 81, 93], [66, 77, 81, 93],
     [66, 77, 82, 94]],
    [[64, 76, 80, 92], [64, 76, 80, 92], [64, 76, 80, 92], [65, 77, 81, 93], [66, 77, 82, 94], [67, 78, 82, 94],
     [67, 78, 82, 94]],
    [[64, 76, 80, 92], [64, 76, 80, 92], [65, 76, 80, 92], [66, 77, 81, 93], [66, 78, 82, 94], [67, 78, 82, 94],
     [67, 78, 82, 94]],
    [[64, 76, 80, 92], [64, 76, 80, 92], [65, 77, 80, 92], [66, 77, 81, 93], [66, 78, 82, 94], [66, 78, 82, 94],
     [67, 78, 82, 94]]]
Mest = [[75.4, 76.6, 78.6, 80.8, 83, 84.9, 86.1], [84.9, 86.3, 88.6, 91.1, 93.7, 96, 97.4],
        [91, 92.4, 94.9, 97.6, 100.5, 103.1, 104.6], [97.2, 98.8, 101.4, 107.6, 110.5, 112.2],
        [103.6, 105.3, 108.2, 111.5, 114.9, 118.1, 120], [110, 111.8, 114.9, 118.4, 122.1, 125.6, 127.7],
        [115.9, 117.8, 121.1, 124.9, 128.8, 132.5, 134.7], [121, 123, 126.5, 130.6, 134.7, 138.5, 140.9],
        [125.3, 127.6, 131.3, 135.6, 140.1, 144.1, 146.6], [129.7, 132.2, 136.3, 141, 145.8, 150.2, 152.8],
        [135.6, 138.3, 142.8, 147.8, 152.8, 157.3, 160], [142.8, 145.5, 149.9, 154.8, 159.6, 163.8, 166.4],
        [148.1, 150.6, 154.7, 159.8, 163.7, 167.8, 170.2], [150.6, 153, 156.9, 161.3, 165.7, 169.7, 172.1],
        [151.7, 154.5, 158.4, 162.8, 167.1, 171.1, 173.4], [152.1, 154.5, 158.4, 162.8, 167.1, 171.7, 173.4],
        [152.4, 154.7, 158.7, 163, 167.4, 171.3, 173.7]]



def percentil_altura(sexo, idade, altura):
    lista = Hest if sexo == 0 else Mest
    return min(range(len(lista[idade - 1])), key=lambda i: abs(lista[idade - 1][i] - altura))


def percentis_pas(sexo, idade, altura):
    lista = Hpas if sexo == 0 else Mpas
    return lista[idade - 1][percentil_altura(sexo, idade, altura)]


def percentis_pad(sexo, idade, altura):
    lista = Hpad if sexo == 0 else Mpad
    return lista[idade - 1][percentil_altura(sexo, idade, altura)]


Idade = 10
Sexo = 1
Altura = 130.1
i = "informações"


class Pas_altura(Screen):
    autoria = "Desenvolvido por Rafael Monteiro, com base no Manual de Orientação sobre hipertensão arterial da SBP, " \
              "publicado em abril de 2019."
    listasexo = ["Masculino", "Feminino"]

    def sexo(self):
        self.ids.Lsexo.text = "[b]Sexo:[/b]" f"[size={int(self.height/36)}]" \
                              + self.listasexo[int(self.ids.sliderSex.value)] + "[/size]"

    def ano(self):
        if self.ids.sliderId.value == 1:
            a = " ano"
        else:
            a = " anos"
        self.ids.Lidade.text = "[b]Idade:[/b]" f"[size={int(self.height / 36)}]" \
                               + str(int(self.ids.sliderId.value)) + a + "[/size]"

    def altura(self):
        self.ids.Laltura.text = "[b]Altura:[/b]" f"[size={int(self.height / 36)}]" \
                               + str(self.ids.ti.text) + "cm" + "[/size]"

    def foco(self):
        if self.ids.ti.text == "Digite aqui a altura":
            self.ids.ti.text = ""

    def calcular(self):
        altura = self.ids.ti.text.replace(',', '.')
        mg = f"[size={int(self.height/60)}]mmHg[/size]"
        if altura != '' and altura != '.' and altura != ',' and altura != "Digite aqui a altura":
            self.ids.pas50.text = "[b]P50[/b]:" + str(percentis_pas(self.ids.sliderSex.value,
                                                                    self.ids.sliderId.value, float(altura))[0]) + mg
            self.ids.pas90.text = "[b]P90:[/b]" + str(percentis_pas(self.ids.sliderSex.value,
                                                                    self.ids.sliderId.value, float(altura))[1]) + mg
            self.ids.pas95.text = "[b]P95:[/b]" + str(percentis_pas(self.ids.sliderSex.value,
                                                                    self.ids.sliderId.value, float(altura))[2]) + mg
            self.ids.pasmax.text = "[b]P95+12:[/b]" + str(percentis_pas(self.ids.sliderSex.value,
                                                                        self.ids.sliderId.value, float(altura))[3]) + mg
            self.ids.pad50.text = "[b]P50:[/b]" + str(percentis_pad(self.ids.sliderSex.value,
                                                                    self.ids.sliderId.value, float(altura))[0]) + mg
            self.ids.pad90.text = "[b]P90[/b]:" + str(percentis_pad(self.ids.sliderSex.value,
                                                                    self.ids.sliderId.value, float(altura))[1]) + mg
            self.ids.pad95.text = "[b]P95[/b]:" + str(percentis_pad(self.ids.sliderSex.value,
                                                                    self.ids.sliderId.value, float(altura))[2]) + mg
            self.ids.padmax.text = "[b]P95+12:[/b]" + str(percentis_pad(self.ids.sliderSex.value,
                                                                        self.ids.sliderId.value, float(altura))[3]) + mg


class FloatInput(TextInput):
    pat = re.compile('[^0-9]')
    pat2 = re.compile('[^0-9.,]')
    def insert_text(self, substring, from_undo=False):
        if ',' in self.text or '.' in self.text or self.text == '':
            s = re.sub(self.pat, '', substring)
        else:
            s = re.sub(self.pat2, '', substring)
        if len(self.text) < 5:
            return super().insert_text(s, from_undo=from_undo)


class Pas_idade(Screen):
    autoria = "Desenvolvido por Rafael Monteiro, supostamente baseado na 'Second Task Force Pressure Control in " \
              "Children, National Heart, Lung and Blood Institute'."
    listasexo = ["Masculino", "Feminino"]
    listaidade = ["1 dia", "3 dias", "7 dias", "1 mês", "2 meses", "3 meses", "4 meses", "5 meses", "6 meses",
                  "7 meses", "8 meses", "9 meses", "10 meses", "11 meses", "1 ano", "2 anos", "3 anos", "4 anos",
                  "5 anos", "6 anos", "7 anos", "8 anos", "9 anos", "10 anos", "11 anos", "12 anos", "13 anos",
                  "14 anos", "15 anos", "16 anos", "17 anos", "18 anos"]
    def sexo(self):
        self.ids.Lsexo.text = "[b]Sexo:[/b]" f"[size={int(self.height / 36)}]" \
                              + self.listasexo[int(self.ids.sliderSex.value)] + "[/size]"

    def ano(self):
        self.ids.Lidade.text = "[b]Idade:[/b]" f"[size={int(self.height / 36)}]" \
                               + self.listaidade[int(self.ids.sliderId.value)] + "[/size]"


    def calcular(self):
        mg = f"[size={int(self.height / 60)}]mmHg[/size]"
        listaPAS = IdHpas if self.ids.sliderSex.value == 0 else IdMpas
        listaPAD = IdHpad if self.ids.sliderSex.value == 0 else IdMpad
        self.ids.pas5.text = "[b]P05[/b]:" + str(listaPAS[int(self.ids.sliderId.value)][0]) + mg
        self.ids.pas10.text = "[b]P10[/b]:" + str(listaPAS[int(self.ids.sliderId.value)][1]) + mg
        self.ids.pas50.text = "[b]P50[/b]:" + str(listaPAS[int(self.ids.sliderId.value)][2]) + mg
        self.ids.pas90.text = "[b]P90[/b]:" + str(listaPAS[int(self.ids.sliderId.value)][3]) + mg
        self.ids.pas95.text = "[b]P95[/b]:" + str(listaPAS[int(self.ids.sliderId.value)][4]) + mg
        self.ids.pad5.text = "[b]P05[/b]:" + str(listaPAD[int(self.ids.sliderId.value)][0]) + mg
        self.ids.pad10.text = "[b]P10[/b]:" + str(listaPAD[int(self.ids.sliderId.value)][1]) + mg
        self.ids.pad50.text = "[b]P50[/b]:" + str(listaPAD[int(self.ids.sliderId.value)][2]) + mg
        self.ids.pad90.text = "[b]P90[/b]:" + str(listaPAD[int(self.ids.sliderId.value)][3]) + mg
        self.ids.pad95.text = "[b]P95[/b]:" + str(listaPAD[int(self.ids.sliderId.value)][4]) + mg


class Informacoes(Screen):
    autoria = "Esse aplicativo foi desenvolvido por Rafael Monteiro Pereira de Farias, sem fins lucrativos. Os dados " \
              "apresentados podem conter erros e/ou estar desatualizados. Não me responsabilizo por qualquer conduta " \
              "tomada com base nos valores fornecidos.\nA calculadora que utiliza sexo, idade e altura foi baseada no" \
              " Manual de Orientação do Departamento Científico de Nefrologia e da Sociedade Brasileira de Pediatria " \
              "sobre Hipertensão Arterial na Infância e Adolescência, publicado em abril de 2019.\nA calculadora que " \
              "utiliza apenas sexo e altura foi baseada numa tabela com dados supostamente extraídos da Second Task " \
              "Force Pressure Control in Children do National Heart, Lung and Blood Institute. Entretanto, não foi " \
              "possível confirmar a veracidade desses dados.\nDessa forma, o aplicativo tem o intuito de ser " \
              "apenas uma ferramenta para consultar os percentis de pressão arterial em crianças e adolescentes de " \
              "maneira rápida e prática, não sendo recomendada a utilização para embasar decisões clínicas.\n[b]Para " \
              "dúvidas, comentários ou sugestões, entrar em contato pelo Instagram: @rafael_monteiro[/b]"
    pass


class Barra(FloatLayout):
    pass


sm.add_widget(Pas_altura(name='palt'))
sm.add_widget(Pas_idade(name='pid'))
sm.add_widget(Informacoes(name='info'))


class MyMainApp(App):
    def build(self):
        return sm


if __name__ == "__main__":
    MyMainApp().run()
